library simplify_tests;

import 'package:guinness/guinness.dart';
import '../../../lib/simplify/simplify.dart';

var points = '224.55, 250.15 226.91, 244.19 233.31, 241.45 234.98, 236.06 244.21, 232.76 262.59, 215.31 267.76, 213.81 273.57, 201.84 273.12, 192.16 277.62, 189.03 280.36, 181.41 286.51, 177.74 292.41, 159.37 296.91, 155.64 314.95, 151.37 319.75, 145.16 330.33, 137.57 341.48, 139.96 369.98, 137.89 387.39, 142.51 391.28, 139.39 409.52, 141.14 414.82, 139.75 427.72, 127.30 439.60, 119.74 474.93, 107.87 486.51, 106.75 489.20, 109.45 493.79, 108.63 504.74, 119.66 512.96, 122.35 518.63, 120.89 524.09, 126.88 529.57, 127.86 534.21, 140.93 539.27, 147.24 567.69, 148.91 575.25, 157.26 580.62, 158.15 601.53, 156.85 617.74, 159.86 622.00, 167.04 629.55, 194.60 638.90, 195.61 641.26, 200.81 651.77, 204.56 671.55, 222.55 683.68, 217.45 695.25, 219.15 700.64, 217.98 703.12, 214.36 712.26, 215.87 721.49, 212.81 727.81, 213.36 729.98, 208.73 735.32, 208.20 739.94, 204.77 769.98, 208.42 779.60, 216.87 784.20, 218.16 800.24, 214.62 810.53, 219.73 817.19, 226.82 820.77, 236.17 827.23, 236.16 829.89, 239.89 851.00, 248.94 859.88, 255.49 865.21, 268.53 857.95, 280.30 865.48, 291.45 866.81, 298.66 864.68, 302.71 867.79, 306.17 859.87, 311.37 860.08, 314.35 858.29, 314.94 858.10, 327.60 854.54, 335.40 860.92, 343.00 856.43, 350.15 851.42, 352.96 849.84, 359.59 854.56, 365.53 849.74, 370.38 844.09, 371.89 844.75, 380.44 841.52, 383.67 839.57, 390.40 845.59, 399.05 848.40, 407.55 843.71, 411.30 844.09, 419.88 839.51, 432.76 841.33, 441.04 847.62, 449.22 847.16, 458.44 851.38, 462.79 853.97, 471.15 866.36, 480.77';

var corner = new Point()..x=224.55..y=106.75;
var simplified = 'M 0.0 143.4 L 10.4 129.3 L 43.2 107.1 L 49.0 95.1 L 48.6 85.4 L 62.0 71.0 L 72.4 48.9 L 90.4 44.6 L 105.8 30.8 L 185.0 34.4 L 215.1 13.0 L 262.0 0.0 L 269.2 1.9 L 280.2 12.9 L 294.1 14.1 L 305.0 21.1 L 314.7 40.5 L 343.1 42.2 L 356.1 51.4 L 393.2 53.1 L 405.0 87.8 L 414.3 88.9 L 416.7 94.1 L 427.2 97.8 L 447.0 115.8 L 459.1 110.7 L 470.7 112.4 L 478.6 107.6 L 503.3 106.6 L 505.4 102.0 L 515.4 98.0 L 545.4 101.7 L 559.7 111.4 L 575.7 107.9 L 586.0 113.0 L 596.2 129.4 L 602.7 129.4 L 635.3 148.7 L 640.7 161.8 L 633.4 173.6 L 640.9 184.7 L 640.1 196.0 L 643.2 199.4 L 635.3 204.6 L 630.0 228.6 L 636.4 236.3 L 625.3 252.8 L 630.0 258.8 L 619.5 265.1 L 620.2 273.7 L 615.0 283.6 L 623.8 300.8 L 619.2 304.6 L 615.0 326.0 L 629.4 364.4 L 641.8 374.0';
var simplified5 = 'M 0.0 143.4 L 43.2 107.1 L 72.4 48.9 L 105.8 30.8 L 185.0 34.4 L 215.1 13.0 L 262.0 0.0 L 305.0 21.1 L 314.7 40.5 L 393.2 53.1 L 405.0 87.8 L 447.0 115.8 L 503.3 106.6 L 515.4 98.0 L 545.4 101.7 L 555.0 110.1 L 575.7 107.9 L 596.2 129.4 L 635.3 148.7 L 640.7 161.8 L 633.4 173.6 L 643.2 199.4 L 635.3 204.6 L 630.0 228.6 L 636.4 236.3 L 625.3 252.8 L 630.0 258.8 L 619.5 265.1 L 615.0 283.6 L 623.8 300.8 L 615.0 326.0 L 629.4 364.4 L 641.8 374.0';

void main() {
    describe('Simplify', () {
        it('should simplify points correctly with the default tolerance', () {
            var result = simplify(points);

            expect(result.corner).toEqual(corner);
            expect(result.path).toEqual(simplified);
        });

        it('should simplify points correctly with the given tolerance', () {
            var result = simplify(points, 5);

            expect(result.corner).toEqual(corner);
            expect(result.path).toEqual(simplified5);
        });

        it('should return a line that have only have had its padding removed if it has only two points', () {
            var result = simplify('1, 2 4, 5');

            expect(result.corner).toEqual(new Point()..x=1..y=2);
            expect(result.path).toEqual('M 0.0 0.0 L 3.0 3.0');
        });

        it('should returns a empty result if it has no points', () {
            var result = simplify('');

            expect(result.path).toEqual(null);
        });
    });
}
